{"version":3,"file":"static/js/790.f2891d48.chunk.js","mappings":"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","sources":["pages/Admin.jsx","util/firebase.js","util/webServices.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { NavBar } from '../components/NavBar';\r\nimport webServices from '../util/webServices';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { auth } from '../util/firebase';\r\nimport { signOut } from \"firebase/auth\";\r\n\r\nexport default function Admin() {\r\n  const [ytID, setytID] = useState('');\r\n  const [videoAuthor, setVideoAuthor] = useState('');\r\n  const [videoDescription, setVideoDescription] = useState('');\r\n  const [existingVideos, setExistingVideos] = useState([]);\r\n  const [videoCategory, setVideoCategory] = useState('');\r\n\r\n  const [audioAuthor, setAudioAuthor] = useState('');\r\n  const [audioURL, setAudioURL] = useState('');\r\n  const [audioTitle, setAudioTitle] = useState('');\r\n  const [audioDate, setAudioDate] = useState('');\r\n  const [audioDescription, setAudioDescription] = useState('');\r\n  const [existingAudios, setExistingAudios] = useState([]);\r\n\r\n\r\n  const [mode, setMode] = useState('add_videos');\r\n  const [idToken, setIdToken] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    let unsubscribeAuth;\r\n    const fetchData = async () => {\r\n      try {\r\n        const [videosResponse, audiosResponse] = await Promise.all([\r\n          webServices.getVideos(),\r\n          webServices.getAudios()\r\n        ]);\r\n        setExistingVideos(videosResponse.data);\r\n        setExistingAudios(audiosResponse.data);\r\n        console.log('Videos:', videosResponse.data);\r\n        console.log('Audios:', audiosResponse.data);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    const checkUserAndFetchData = async (user) => {\r\n      if (user) {\r\n        const idTokenResult = await user.getIdToken(true);\r\n        setIdToken(idTokenResult);\r\n        fetchData();\r\n      } else {\r\n        navigate('/login');\r\n      }\r\n    };\r\n\r\n    unsubscribeAuth = auth.onAuthStateChanged(checkUserAndFetchData);\r\n\r\n    // Clean up the observers when the component unmounts\r\n    return () => {\r\n      unsubscribeAuth();\r\n    };\r\n  }, [navigate]);\r\n\r\n\r\n  const handleLogout = () => {               \r\n    signOut(auth).then(() => {\r\n        navigate(\"/\");\r\n    }).catch((error) => {\r\n      console.log('logout error occured');\r\n    });\r\n  }\r\n\r\n  const handleYTIDChange = (e, id) => {\r\n    setExistingVideos((prevVideos) =>\r\n      prevVideos.map((video) =>\r\n        video.id === id ? { ...video, youtubeID: e.target.value } : video\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleVideoAuthorChange = (e, id) => {\r\n    setExistingVideos((prevVideos) =>\r\n      prevVideos.map((video) =>\r\n        video.id === id ? { ...video, author: e.target.value } : video\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleVideoCategoryChange = (e, id) => {\r\n    setExistingVideos((prevVideos) =>\r\n      prevVideos.map((video) =>\r\n        video.id === id ? { ...video, category: e.target.value } : video\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleVideoDescriptionChange = (e, id) => {\r\n    setExistingVideos((prevVideos) =>\r\n      prevVideos.map((video) =>\r\n        video.id === id ? { ...video, description: e.target.value } : video\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleVideoPost = (e) => {\r\n    e.preventDefault();\r\n  \r\n    // Create the video data object to be posted\r\n    const newVideoData = {\r\n      author: videoAuthor,\r\n      description: videoDescription,\r\n      category: videoCategory\r\n    };\r\n  \r\n    // Call the postVideo method to add the video\r\n    webServices.postVideo(idToken, ytID, newVideoData)\r\n      .then((response) => {\r\n        console.log('New video added:', response);\r\n  \r\n        // Clear the input fields after submission\r\n        setytID('');\r\n        setVideoAuthor('');\r\n        setVideoDescription('');\r\n        setVideoCategory('');\r\n\r\n        webServices.getVideo(response.headers.location).then((resp) => {\r\n          setExistingVideos((prevVideos) => [...prevVideos, resp.data]);\r\n        }).catch((error) => {\r\n          console.error('Error getting added video:', error);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error adding video:', error);\r\n      });\r\n  };\r\n\r\n  const handleAudioPost = (e) => {\r\n    e.preventDefault();\r\n  \r\n    // Create the video data object to be posted\r\n    const newAudioData = {\r\n      url: audioURL,\r\n      description: audioDescription,\r\n      title: audioTitle,\r\n      author: audioAuthor,\r\n      creationDate: audioDate\r\n    };\r\n  \r\n    // Call the postVideo method to add the video\r\n    webServices.postAudio(idToken, newAudioData)\r\n      .then((response) => {\r\n        console.log('New audio clip added:', response);\r\n  \r\n        // Clear the input fields after submission\r\n        setAudioURL('');\r\n        setAudioDescription('');\r\n        setAudioTitle('');\r\n        setAudioAuthor('');\r\n        setAudioDate('');\r\n\r\n        webServices.getAudio(response.headers.location).then((resp) => {\r\n          setExistingAudios((prev) => [...prev, resp.data]);\r\n        }).catch((error) => {\r\n          console.error('Error getting added audio clip:', error);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error adding audio clip:', error);\r\n      });\r\n  };\r\n\r\n  const handleModeChange = (selectedMode) => {\r\n    setMode(selectedMode);\r\n  };\r\n\r\n  const handleVideoDelete = (idToDelete) => {\r\n    // Call the deleteVideo method to delete the video\r\n    webServices.deleteVideo(idToken, idToDelete)\r\n      .then(() => {\r\n        console.log('Video deleted successfully.');\r\n  \r\n        // Remove the deleted video from the list of existingVideos\r\n        setExistingVideos((prevVideos) =>\r\n          prevVideos.filter((video) => video.id !== idToDelete)\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error deleting video:', error);\r\n      });\r\n  };\r\n\r\n  const handleAudioDelete = (idToDelete) => {\r\n    // Call the deleteVideo method to delete the video\r\n    webServices.deleteAudio(idToken, idToDelete)\r\n      .then(() => {\r\n        console.log('Audio deleted successfully.');\r\n  \r\n        // Remove the deleted video from the list of existingVideos\r\n        setExistingAudios((prev) =>\r\n          prev.filter((clip) => clip.id !== idToDelete)\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error deleting audio:', error);\r\n      });\r\n  };\r\n\r\n  const handleVideoUpdate = (idToUpdate) => {\r\n    // Find the video to update in existingVideos\r\n    const videoToUpdate = existingVideos.find((video) => video.id === idToUpdate);\r\n  \r\n    // Create the updated video data object\r\n    const updatedVideoData = {\r\n      author: videoToUpdate.author,\r\n      description: videoToUpdate.description,\r\n      category: videoToUpdate.category\r\n    };\r\n  \r\n    // Call the updateVideo method to update the video\r\n    webServices.updateVideo(idToken, idToUpdate, updatedVideoData, videoToUpdate.youtubeID)\r\n      .then((response) => {\r\n        console.log('Video updated:', response.data);\r\n  \r\n        setExistingVideos((prevVideos) =>\r\n          prevVideos.map((video) =>\r\n            video.id === idToUpdate ? response.data : video\r\n          )\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error updating video:', error);\r\n      });\r\n  };\r\n\r\n  const handleAudioUpdate = (idToUpdate) => {\r\n    const clipToUpdate = existingAudios.find((clip) => clip.id === idToUpdate);\r\n  \r\n    const updatedClipData = {\r\n      url: clipToUpdate.url,\r\n      title: clipToUpdate.title,\r\n      creationDate: clipToUpdate.creationDate,\r\n      author: clipToUpdate.author,\r\n      description: clipToUpdate.description, \r\n    };\r\n  \r\n    webServices.updateAudio(idToken, idToUpdate, updatedClipData)\r\n      .then((response) => {\r\n        console.log('Audio updated:', response);\r\n  \r\n        setExistingAudios((prev) =>\r\n          prev.map((clip) =>\r\n            clip.id === idToUpdate ? response.data : clip\r\n          )\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error updating audio:', error);\r\n      });\r\n  };\r\n\r\n  const handleURLChange = (e, id) => {\r\n    setExistingAudios((prev) =>\r\n      prev.map((clip) =>\r\n        clip.id === id ? { ...clip, url: e.target.value } : clip\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleAudioAuthorChange = (e, id) => {\r\n    setExistingAudios((prev) =>\r\n      prev.map((clip) =>\r\n        clip.id === id ? { ...clip, author: e.target.value } : clip\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleAudioDescriptionChange = (e, id) => {\r\n    setExistingAudios((prev) =>\r\n      prev.map((clip) =>\r\n        clip.id === id ? { ...clip, description: e.target.value } : clip\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleAudioTitleChange = (e, id) => {\r\n    setExistingAudios((prev) =>\r\n        prev.map((clip) =>\r\n        clip.id === id ? { ...clip, title: e.target.value } : clip\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleAudioDateChange = (e, id) => {\r\n    setExistingAudios((prev) =>\r\n        prev.map((clip) =>\r\n        clip.id === id ? { ...clip, creationDate: e.target.value } : clip\r\n      )\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <NavBar isAdminPage={true} handleLogout={handleLogout}/>\r\n      <div className='w-full min-h-[calc(100vh-43px)] max-h-fit bg-zinc-900 text-white flex flex-col items-center justify-center'>\r\n        <h1 className='text-6xl font-bold text-blue-500 tracking-wider inline pt-[97px]'>Admin Portal</h1>\r\n\r\n        {/* Mode Picker Buttons */}\r\n        <div className='mt-4'>\r\n          <button\r\n            onClick={() => handleModeChange('add_videos')}\r\n            className={`${\r\n              mode === 'add_videos' ? 'bg-blue-500' : 'bg-gray-500'\r\n            } text-white px-4 py-2 my-4 mx-2 hover:bg-blue-600`}\r\n          >\r\n            Add Video\r\n          </button>\r\n          <button\r\n            onClick={() => handleModeChange('delete_update_videos')}\r\n            className={`${\r\n              mode === 'delete_update_videos' ? 'bg-blue-500' : 'bg-gray-500'\r\n            } text-white px-4 py-2 my-4 mx-2 hover:bg-blue-600`}\r\n          >\r\n            Delete/Update Videos\r\n          </button>\r\n          <button\r\n            onClick={() => handleModeChange('add_audios')}\r\n            className={`${\r\n              mode === 'add_audios' ? 'bg-blue-500' : 'bg-gray-500'\r\n            } text-white px-4 py-2 my-4 mx-2 hover:bg-blue-600`}\r\n          >\r\n            Add Audio Clips\r\n          </button>\r\n          <button\r\n            onClick={() => handleModeChange('delete_update_audios')}\r\n            className={`${\r\n              mode === 'delete_update_audios' ? 'bg-blue-500' : 'bg-gray-500'\r\n            } text-white px-4 py-2 my-4 mx-2 hover:bg-blue-600`}\r\n          >\r\n            Delete/Update Audio Clips\r\n          </button>\r\n        </div>\r\n\r\n        {/* Render Form for Adding Videos */}\r\n        {mode === 'add_videos' && (\r\n          <form onSubmit={handleVideoPost} className='mt-4 w-full max-w-3xl'>\r\n            <div>\r\n              <label className='block text-white text-lg mb-2'>YouTube ID:</label>\r\n              <input\r\n                type='text'\r\n                value={ytID}\r\n                onChange={(e) => setytID(e.target.value)}\r\n                className='bg-zinc-800 text-white w-full px-4 py-2 rounded-md'\r\n                placeholder='Enter YouTube video ID'\r\n              />\r\n            </div>\r\n\r\n            <div className='mt-4'>\r\n              <label className='block text-white text-lg mb-2'>Author(s):</label>\r\n              <input\r\n                type='text'\r\n                value={videoAuthor}\r\n                onChange={(e) => setVideoAuthor(e.target.value)}\r\n                className='bg-zinc-800 text-white w-full px-4 py-2 rounded-md'\r\n                placeholder='Enter author(s)'\r\n              />\r\n            </div>\r\n\r\n            <div className='mt-4'>\r\n              <label className='block text-white text-lg mb-2'>Category:</label>\r\n              <select\r\n                value={videoCategory}\r\n                onChange={(e) => setVideoCategory(e.target.value)}\r\n                className='bg-zinc-800 text-white w-full px-4 py-2 rounded-md'\r\n              >\r\n                <option value='' disabled>Select a category</option>\r\n                <option value=''>None</option>\r\n                <option value='interviews'>Interviews</option>\r\n                <option value='shorts'>Shorts</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className='mt-4'>\r\n              <label className='block text-white text-lg mb-2'>Description:</label>\r\n              <textarea\r\n                value={videoDescription}\r\n                onChange={(e) => setVideoDescription(e.target.value)}\r\n                className='bg-zinc-800 text-white w-full px-4 py-2 rounded-md'\r\n                placeholder='Enter video description'\r\n                rows={4}\r\n              />\r\n            </div>\r\n\r\n            <div className='w-full flex justify-center'>\r\n              <button\r\n                type='submit'\r\n                className='bg-blue-500 text-white px-4 py-2 mt-4 mb-8 hover:bg-blue-600'\r\n              >\r\n                Submit Video\r\n              </button>\r\n            </div>\r\n          </form>\r\n        )}\r\n\r\n        {/* Render List of Existing Videos with Delete/Update Options */}\r\n        {mode === 'delete_update_videos' && (\r\n          <div className='mt-4 w-full max-w-3xl'>\r\n            <h2 className='text-3xl font-bold mb-4 text-white'>Existing Videos:</h2>\r\n            <ul className='grid grid-cols-2 gap-4 mb-4'>\r\n              {existingVideos.map((video) => (\r\n                <li key={video.id}>\r\n                  <div className='bg-zinc-800 p-4 rounded-md'>\r\n                    <p>YouTube ID: {video.youtubeID}</p>\r\n                    <p>Author(s): {video.author}</p>\r\n                    <p>Description: {video.description}</p>\r\n\r\n                    <div className='mt-2'>\r\n                      <label className='block text-white text-lg mb-2'>New Video ID:</label>\r\n                      <input\r\n                        type='text'\r\n                        value={video.youtubeID}\r\n                        onChange={(e) => handleYTIDChange(e, video.id)}\r\n                        className='bg-zinc-700 text-white w-full px-4 py-2 rounded-md'\r\n                        placeholder='Enter new YouTube video ID'\r\n                      />\r\n                    </div>\r\n\r\n                    <div className='mt-2'>\r\n                      <label className='block text-white text-lg mb-2'>New Author(s):</label>\r\n                      <input\r\n                        type='text'\r\n                        value={video.author}\r\n                        onChange={(e) => handleVideoAuthorChange(e, video.id)}\r\n                        className='bg-zinc-700 text-white w-full px-4 py-2 rounded-md'\r\n                        placeholder='Enter new author(s)'\r\n                      />\r\n                    </div>\r\n\r\n                    <div className='mt-2'>\r\n                      <label className='block text-white text-lg mb-2'>Category:</label>\r\n                      <select\r\n                        value={video.category || ''}\r\n                        onChange={(e) => handleVideoCategoryChange(e, video.id)}\r\n                        className='bg-zinc-800 text-white w-full px-4 py-2 rounded-md'\r\n                      >\r\n                        <option value='' disabled>Select a category</option>\r\n                        <option value=''>None</option>\r\n                        <option value='interviews'>Interviews</option>\r\n                        <option value='shorts'>Shorts</option>\r\n                      </select>\r\n                    </div>\r\n\r\n                    <div className='mt-2'>\r\n                      <label className='block text-white text-lg mb-2'>New Description:</label>\r\n                      <textarea\r\n                        value={video.description}\r\n                        onChange={(e) => handleVideoDescriptionChange(e, video.id)}\r\n                        className='bg-zinc-700 text-white w-full px-4 py-2 rounded-md'\r\n                        placeholder='Enter new video description'\r\n                        rows={2}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className='grid grid-cols-4'>\r\n                      <button\r\n                        onClick={() => handleVideoUpdate(video.id)}\r\n                        className='bg-blue-500 text-white px-2 py-1 mt-2 hover:bg-blue-600'\r\n                      >\r\n                        Update\r\n                      </button>\r\n\r\n                      <div className='col-span-2'></div>\r\n\r\n                      <button\r\n                        onClick={() => handleVideoDelete(video.id)}\r\n                        className='bg-red-500 text-white px-2 py-1 mt-2 hover:bg-red-600'\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n\r\n        {/* Render Form for Adding Audio Clips */}\r\n        {mode === 'add_audios' && (\r\n          <form onSubmit={handleAudioPost} className='mt-4 w-full max-w-3xl'>\r\n            <div>\r\n              <label className='block text-white text-lg mb-2'>Soundcloud URL:</label>\r\n              <input\r\n                type='text'\r\n                value={audioURL}\r\n                onChange={(e) => setAudioURL(e.target.value)}\r\n                className='bg-zinc-800 text-white w-full px-4 py-2 rounded-md'\r\n                placeholder='Enter Soundcloud track URL'\r\n              />\r\n            </div>\r\n\r\n            <div className='mt-4'>\r\n              <label className='block text-white text-lg mb-2'>Author(s):</label>\r\n              <input\r\n                type='text'\r\n                value={audioAuthor}\r\n                onChange={(e) => setAudioAuthor(e.target.value)}\r\n                className='bg-zinc-800 text-white w-full px-4 py-2 rounded-md'\r\n                placeholder='Enter author(s)'\r\n              />\r\n            </div>\r\n\r\n            <div className='mt-4'>\r\n              <label className='block text-white text-lg mb-2'>Title:</label>\r\n              <input\r\n                type='text'\r\n                value={audioTitle}\r\n                onChange={(e) => setAudioTitle(e.target.value)}\r\n                className='bg-zinc-800 text-white w-full px-4 py-2 rounded-md'\r\n                placeholder='Enter title'\r\n              />\r\n            </div>\r\n\r\n            <div className='mt-4'>\r\n              <label className='block text-white text-lg mb-2'>Creation Date:</label>\r\n              <input\r\n                type='text'\r\n                value={audioDate}\r\n                onChange={(e) => setAudioDate(e.target.value)}\r\n                className='bg-zinc-800 text-white w-full px-4 py-2 rounded-md'\r\n                placeholder='Enter creation date'\r\n              />\r\n            </div>\r\n\r\n            <div className='mt-4'>\r\n              <label className='block text-white text-lg mb-2'>Description:</label>\r\n              <textarea\r\n                value={audioDescription}\r\n                onChange={(e) => setAudioDescription(e.target.value)}\r\n                className='bg-zinc-800 text-white w-full px-4 py-2 rounded-md'\r\n                placeholder='Enter audio clip description'\r\n                rows={4}\r\n              />\r\n            </div>\r\n\r\n            <div className='w-full flex justify-center'>\r\n              <button\r\n                type='submit'\r\n                className='bg-blue-500 text-white px-4 py-2 mt-4 mb-8 hover:bg-blue-600'\r\n              >\r\n                Submit Video\r\n              </button>\r\n            </div>\r\n          </form>\r\n        )}\r\n\r\n        {/* Render List of Existing Audio clips with Delete/Update Options */}\r\n        {mode === 'delete_update_audios' && (\r\n          <div className='mt-4 w-full max-w-3xl'>\r\n            <h2 className='text-3xl font-bold mb-4 text-white'>Existing Audio Clips:</h2>\r\n            <ul className='grid grid-cols-2 gap-4 mb-4'>\r\n              {existingAudios.map((clip) => (\r\n                <li key={clip.id}>\r\n                  <div className='bg-zinc-800 p-4 rounded-md'>\r\n                    <p>URL: {clip.url}</p>\r\n                    <p>Title: {clip.title}</p>\r\n                    <p>Author(s): {clip.author}</p>\r\n                    <p>Creation Date: {clip.creationDate}</p>\r\n                    <p>Description: {clip.description}</p>\r\n                    <div className='mt-2'>\r\n                      <label className='block text-white text-lg mb-2'>New URL:</label>\r\n                      <input\r\n                        type='text'\r\n                        value={clip.url}\r\n                        onChange={(e) => handleURLChange(e, clip.id)}\r\n                        className='bg-zinc-700 text-white w-full px-4 py-2 rounded-md'\r\n                        placeholder='Enter soundcloud url'\r\n                      />\r\n                    </div>\r\n                    <div className='mt-2'>\r\n                      <label className='block text-white text-lg mb-2'>New Title:</label>\r\n                      <input\r\n                        type='text'\r\n                        value={clip.title}\r\n                        onChange={(e) => handleAudioTitleChange(e, clip.id)}\r\n                        className='bg-zinc-700 text-white w-full px-4 py-2 rounded-md'\r\n                        placeholder='Enter new title'\r\n                      />\r\n                    </div>\r\n                    <div className='mt-2'>\r\n                      <label className='block text-white text-lg mb-2'>New Author(s):</label>\r\n                      <input\r\n                        type='text'\r\n                        value={clip.author}\r\n                        onChange={(e) => handleAudioAuthorChange(e, clip.id)}\r\n                        className='bg-zinc-700 text-white w-full px-4 py-2 rounded-md'\r\n                        placeholder='Enter author(s)'\r\n                      />\r\n                    </div>\r\n                    <div className='mt-2'>\r\n                      <label className='block text-white text-lg mb-2'>New Creation Date:</label>\r\n                      <input\r\n                        type='text'\r\n                        value={clip.creationDate}\r\n                        onChange={(e) => handleAudioDateChange(e, clip.id)}\r\n                        className='bg-zinc-700 text-white w-full px-4 py-2 rounded-md'\r\n                        placeholder='Enter new audio clip creation date'\r\n                      />\r\n                    </div>\r\n                    <div className='mt-2'>\r\n                      <label className='block text-white text-lg mb-2'>New Description:</label>\r\n                      <textarea\r\n                        value={clip.description}\r\n                        onChange={(e) => handleAudioDescriptionChange(e, clip.id)}\r\n                        className='bg-zinc-700 text-white w-full px-4 py-2 rounded-md'\r\n                        placeholder='Enter new description'\r\n                        rows={2}\r\n                      />\r\n                    </div>\r\n                    <div className='grid grid-cols-4'>\r\n                      <button\r\n                        onClick={() => handleAudioUpdate(clip.id)}\r\n                        className='bg-blue-500 text-white px-2 py-1 mt-2 hover:bg-blue-600'\r\n                      >\r\n                        Update\r\n                      </button>\r\n\r\n                      <div className='col-span-2'></div>\r\n\r\n                      <button\r\n                        onClick={() => handleAudioDelete(clip.id)}\r\n                        className='bg-red-500 text-white px-2 py-1 mt-2 hover:bg-red-600'\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAyk41yYPysuvQmSAa9vwYnWP-sbU1qt54\",\r\n  authDomain: \"media-webapp.firebaseapp.com\",\r\n  projectId: \"media-webapp\",\r\n  storageBucket: \"media-webapp.appspot.com\",\r\n  messagingSenderId: \"804913660095\",\r\n  appId: \"1:804913660095:web:1a30f3b01c72da9385460a\",\r\n  measurementId: \"G-90Z60ZFVCL\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Initialize Firebase Authentication and get a reference to the service\r\nexport const auth = getAuth(app);\r\nexport default app;\r\n","import axios from \"axios\";\r\n\r\nconst API_BASE_URL = \"http://localhost\";\r\n\r\nclass WebServices {\r\n  getVideos() {\r\n    return axios.get(`${API_BASE_URL}/videos`);\r\n  }\r\n\r\n  getVideo(url) {\r\n    return axios.get(url);\r\n  }\r\n\r\n  postVideo(idToken, videoId, videoData) {\r\n    return axios.post(`${API_BASE_URL}/videos`, videoData, {\r\n      params: {\r\n        videoId: videoId,\r\n      },\r\n      headers: {\r\n        Authorization: `Bearer ${idToken}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n  }\r\n\r\n  updateVideo(idToken, id, videoData, videoId) {\r\n    return axios.put(`${API_BASE_URL}/videos/${id}`, videoData, {\r\n      params: {\r\n        videoId: videoId,\r\n      },\r\n      headers: {\r\n        Authorization: `Bearer ${idToken}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n  }\r\n\r\n  deleteVideo(idToken, id) {\r\n    return axios.delete(`${API_BASE_URL}/videos/${id}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${idToken}`,\r\n      },\r\n    });\r\n  }\r\n\r\n  getAudios() {\r\n    return axios.get(`${API_BASE_URL}/audios`);\r\n  }\r\n\r\n  getAudio(url) {\r\n    return axios.get(url);\r\n  }\r\n\r\n  postAudio(idToken, audioData) {\r\n    return axios.post(`${API_BASE_URL}/audios`, audioData, {\r\n      headers: {\r\n        Authorization: `Bearer ${idToken}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n  }\r\n\r\n  updateAudio(idToken, id, audioData) {\r\n    return axios.put(`${API_BASE_URL}/audios/${id}`, audioData, {\r\n      headers: {\r\n        Authorization: `Bearer ${idToken}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n  }\r\n\r\n  deleteAudio(idToken, id) {\r\n    return axios.delete(`${API_BASE_URL}/audios/${id}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${idToken}`,\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nexport default new WebServices();\r\n"],"names":["Admin","useState","ytID","setytID","videoAuthor","setVideoAuthor","videoDescription","setVideoDescription","existingVideos","setExistingVideos","videoCategory","setVideoCategory","audioAuthor","setAudioAuthor","audioURL","setAudioURL","audioTitle","setAudioTitle","audioDate","setAudioDate","audioDescription","setAudioDescription","existingAudios","setExistingAudios","mode","setMode","idToken","setIdToken","navigate","useNavigate","useEffect","unsubscribeAuth","fetchData","Promise","all","webServices","videosResponse","audiosResponse","data","console","log","error","checkUserAndFetchData","user","getIdToken","idTokenResult","auth","handleModeChange","selectedMode","isAdminPage","handleLogout","signOut","then","catch","className","onClick","onSubmit","e","preventDefault","newVideoData","author","description","category","response","headers","location","resp","prevVideos","type","value","onChange","target","placeholder","disabled","rows","map","video","youtubeID","id","handleYTIDChange","handleVideoAuthorChange","handleVideoCategoryChange","handleVideoDescriptionChange","idToUpdate","videoToUpdate","find","updatedVideoData","handleVideoUpdate","idToDelete","filter","newAudioData","url","title","creationDate","prev","clip","handleURLChange","handleAudioTitleChange","handleAudioAuthorChange","handleAudioDateChange","handleAudioDescriptionChange","clipToUpdate","updatedClipData","handleAudioUpdate","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getAuth","API_BASE_URL","WebServices","axios","videoId","videoData","params","Authorization","audioData"],"sourceRoot":""}